'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _twilio = require('twilio');

var _twilio2 = _interopRequireDefault(_twilio);

var _BaseSms2 = require('./BaseSms');

var _BaseSms3 = _interopRequireDefault(_BaseSms2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TwilioSms = function (_BaseSms) {
  _inherits(TwilioSms, _BaseSms);

  function TwilioSms(config) {
    _classCallCheck(this, TwilioSms);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TwilioSms).call(this, config));

    _this.setProvider((0, _twilio2.default)(_this.get('provider.accountSid'), _this.get('provider.authToken')));
    return _this;
  }

  /**
   * Send message
   * @param {Object} [_config] Additional configuration
   * @returns {Promise}
   */

  _createClass(TwilioSms, [{
    key: 'send',
    value: function send(_config) {
      var _this2 = this;

      var config = _lodash2.default.merge({}, _lodash2.default.omit(this.get(), 'provider'), _config);
      var promises = [];

      var _loop = function _loop(i) {
        promises.push(new _bluebird2.default(function (resolve, reject) {
          _this2.getProvider().messages.create({
            from: config.sender,
            to: config.recipient[i],
            body: config.message
          }, function (error, message) {
            return error ? reject(error) : resolve(message);
          });
        }));
      };

      for (var i = 0; i < config.recipient.length; i++) {
        _loop(i);
      }

      return _bluebird2.default.all(promises);
    }
  }]);

  return TwilioSms;
}(_BaseSms3.default);

exports.default = TwilioSms;
module.exports = exports['default'];